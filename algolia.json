[{"author":null,"categories":["LeetCode"],"content":"每日leetcode刷题记录 - lc50,lc486,lc877,lc324","date":1724371200,"description":"每日leetcode刷题记录 - lc50,lc486,lc877,lc324","dir":"post/","excerpt_html":"每日leetcode刷题记录 - lc50,lc486,lc877,lc324","excerpt_text":"每日leetcode刷题记录 - lc50,lc486,lc877,lc324","expirydate":-62135596800,"fuzzywordcount":1100,"html":"每日leetcode刷题记录 - lc50,lc486,lc877,lc324","keywords":null,"kind":"page","lang":"en","lastmod":1724371200,"objectID":"3cc730fd5886c8d96d3990a92c51dc32","permalink":"https://wangzhendong20.github.io/2024/08/23/2024-08-23-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240823/","publishdate":"2024-08-23T00:00:00Z","readingtime":3,"relpermalink":"/2024/08/23/2024-08-23-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240823/","section":"post","summary":"\u003cp\u003e\u003cem\u003e今天主要是快速幂（分治法）和区间DP。\u003c/em\u003e\u003c/p\u003e\n\u003ch1 id=\"50-powx-nhttpsleetcodecnproblemspowx-n\"\u003e\u003ca href=\"https://leetcode.cn/problems/powx-n/\"\u003e50. Pow(x, n)\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003e\u003cem\u003ex\u003c/em\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cem\u003e算术评级：5\u003c/em\u003e  \u003cstrong\u003e中等\u003c/strong\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cem\u003e题解来源于https://leetcode.cn/problems/powx-n/solutions/241471/50-powx-n-kuai-su-mi-qing-xi-tu-jie-by-jyd/\u003c/em\u003e\u003c/p\u003e","tags":["Java","LeetCode","算法"],"title":"leetcode打卡 - 2024/8/23","type":"post","url":"/2024/08/23/2024-08-23-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240823/","weight":0,"wordcount":1074},{"author":null,"categories":["Java"],"content":"在实际开发的时候经常用到观察者模式！","date":1724112e3,"description":"在实际开发的时候经常用到观察者模式！","dir":"post/","excerpt_html":"在实际开发的时候经常用到观察者模式！","excerpt_text":"在实际开发的时候经常用到观察者模式！","expirydate":-62135596800,"fuzzywordcount":2e3,"html":"在实际开发的时候经常用到观察者模式！","keywords":null,"kind":"page","lang":"en","lastmod":1724112e3,"objectID":"d30c12ffee4d0b00fbea0c50a9f4c6c7","permalink":"https://wangzhendong20.github.io/2024/08/20/2024-08-20-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/","publishdate":"2024-08-20T00:00:00Z","readingtime":4,"relpermalink":"/2024/08/20/2024-08-20-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/","section":"post","summary":"\u003ch1 id=\"观察者模式observer-pattern\"\u003e观察者模式（Observer Pattern）\u003c/h1\u003e\n\u003ch2 id=\"概述\"\u003e概述：\u003c/h2\u003e\n\u003cp\u003e观察者模式（Observer Pattern）是一种行为设计模式，它定义了一种一对多的依赖关系，使得一个对象状态的改变可以通知到所有依赖它的对象，并且自动更新。这种模式特别适用于需要通知多个对象状态变化的场景，常用于实现事件驱动的系统。\u003c/p\u003e","tags":["设计模式","Java"],"title":"设计模式之观察者模式","type":"post","url":"/2024/08/20/2024-08-20-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":1960},{"author":null,"categories":["LeetCode"],"content":"每日leetcode刷题记录","date":1724025600,"description":"每日leetcode刷题记录","dir":"post/","excerpt_html":"每日leetcode刷题记录","excerpt_text":"每日leetcode刷题记录","expirydate":-62135596800,"fuzzywordcount":2200,"html":"每日leetcode刷题记录","keywords":null,"kind":"page","lang":"en","lastmod":1724025600,"objectID":"1d35047b788b5e9daef140887e681962","permalink":"https://wangzhendong20.github.io/2024/08/19/2024-08-19-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240819/","publishdate":"2024-08-19T00:00:00Z","readingtime":5,"relpermalink":"/2024/08/19/2024-08-19-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240819/","section":"post","summary":"\u003cp\u003e\u003cem\u003e今天主要是图论的题目，学习了二分图，也把https://wangzhendong20.github.io/2024/07/23/leetcode-note/中的二分图补充上了。\u003c/em\u003e\u003c/p\u003e","tags":["Java","LeetCode","算法"],"title":"leetcode打卡 - 2024/8/19","type":"post","url":"/2024/08/19/2024-08-19-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240819/","weight":0,"wordcount":2185},{"author":null,"categories":["TECH"],"content":"记录一些常用的Linux命令，方便日常使用。","date":1724025600,"description":"记录一些常用的Linux命令，方便日常使用。","dir":"post/","excerpt_html":"记录一些常用的Linux命令，方便日常使用。","excerpt_text":"记录一些常用的Linux命令，方便日常使用。","expirydate":-62135596800,"fuzzywordcount":2200,"html":"记录一些常用的Linux命令，方便日常使用。","keywords":null,"kind":"page","lang":"en","lastmod":1724025600,"objectID":"3e65f897f1b6140e184479884bad743b","permalink":"https://wangzhendong20.github.io/2024/08/19/2024-08-19-Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8A%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/","publishdate":"2024-08-19T00:00:00Z","readingtime":5,"relpermalink":"/2024/08/19/2024-08-19-Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8A%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/","section":"post","summary":"\u003ch1 id=\"linux常用命令及常见问题\"\u003eLinux常用命令及常见问题\u003c/h1\u003e\n\u003cp\u003e\u003cstrong\u003e前言：\u003c/strong\u003e 基本上每次都会查一遍命令，就在这里做个简单的记录吧。\u003c/p\u003e\n\u003chr\u003e\n\u003ch1 id=\"linux常用命令\"\u003eLinux常用命令\u003c/h1\u003e\n\u003ch2 id=\"1-ls\"\u003e1. \u003ccode\u003els\u003c/code\u003e\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e用途：\u003c/strong\u003e 列出目录内容\n\u003cstrong\u003e使用场景：\u003c/strong\u003e 查看当前目录下的文件和文件夹。\u003c/p\u003e","tags":["Linux"],"title":"Linux常用命令及常见问题","type":"post","url":"/2024/08/19/2024-08-19-Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8A%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/","weight":0,"wordcount":2143},{"author":null,"categories":["Java"],"content":"基于 Spring Cache 注解 + Redis 实现对数据字典的自动缓存，并通过自定义 Redis Key  Generator 来根据类和方法自动生成 key。","date":1724025600,"description":"基于 Spring Cache 注解 + Redis 实现对数据字典的自动缓存，并通过自定义 Redis Key  Generator 来根据类和方法自动生成 key。","dir":"post/","excerpt_html":"基于 Spring Cache 注解 + Redis 实现对数据字典的自动缓存，并通过自定义 Redis Key  Generator 来根据类和方法自动生成 key。","excerpt_text":"基于 Spring Cache 注解 + Redis 实现对数据字典的自动缓存，并通过自定义 Redis Key  Generator 来根据类和方法自动生成 key。","expirydate":-62135596800,"fuzzywordcount":1700,"html":"基于 Spring Cache 注解 + Redis 实现对数据字典的自动缓存，并通过自定义 Redis Key  Generator 来根据类和方法自动生成 key。","keywords":null,"kind":"page","lang":"en","lastmod":1724025600,"objectID":"c7180c9c95bf58d0448462d969f96f0a","permalink":"https://wangzhendong20.github.io/2024/08/19/2024-08-19-%E5%9F%BA%E4%BA%8ESpringCache%E6%B3%A8%E8%A7%A3%E5%92%8CRedis%E5%AE%9E%E7%8E%B0%E5%AF%B9%E6%95%B0%E6%8D%AE%E5%AD%97%E5%85%B8%E7%9A%84%E8%87%AA%E5%8A%A8%E7%BC%93%E5%AD%98/","publishdate":"2024-08-19T00:00:00Z","readingtime":4,"relpermalink":"/2024/08/19/2024-08-19-%E5%9F%BA%E4%BA%8ESpringCache%E6%B3%A8%E8%A7%A3%E5%92%8CRedis%E5%AE%9E%E7%8E%B0%E5%AF%B9%E6%95%B0%E6%8D%AE%E5%AD%97%E5%85%B8%E7%9A%84%E8%87%AA%E5%8A%A8%E7%BC%93%E5%AD%98/","section":"post","summary":"\u003ch1 id=\"基于-spring-cache-注解--redis-实现对数据字典的自动缓存\"\u003e基于 Spring Cache 注解 + Redis 实现对数据字典的自动缓存\u003c/h1\u003e\n\u003chr\u003e\n\u003cp\u003e\u003cem\u003e前言：\u003c/em\u003e 基于 Spring Cache 注解 + Redis 实现对数据字典的自动缓存，并通过自定义 Redis Key  Generator 来根据类和方法自动生成 key。\u003c/p\u003e","tags":["Java","Redis","Spring Cache"],"title":"基于 Spring Cache 注解 + Redis 实现对数据字典的自动缓存","type":"post","url":"/2024/08/19/2024-08-19-%E5%9F%BA%E4%BA%8ESpringCache%E6%B3%A8%E8%A7%A3%E5%92%8CRedis%E5%AE%9E%E7%8E%B0%E5%AF%B9%E6%95%B0%E6%8D%AE%E5%AD%97%E5%85%B8%E7%9A%84%E8%87%AA%E5%8A%A8%E7%BC%93%E5%AD%98/","weight":0,"wordcount":1612},{"author":null,"categories":["LeetCode"],"content":"每日leetcode刷题记录","date":1723939200,"description":"每日leetcode刷题记录","dir":"post/","excerpt_html":"每日leetcode刷题记录","excerpt_text":"每日leetcode刷题记录","expirydate":-62135596800,"fuzzywordcount":1e3,"html":"每日leetcode刷题记录","keywords":null,"kind":"page","lang":"en","lastmod":1723939200,"objectID":"1eed7b291fcc3ca7ea957ac7501755f8","permalink":"https://wangzhendong20.github.io/2024/08/18/2024-08-18-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240818/","publishdate":"2024-08-18T00:00:00Z","readingtime":2,"relpermalink":"/2024/08/18/2024-08-18-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240818/","section":"post","summary":"\u003cp\u003e\u003cem\u003e前言：今天做了两道相似的题目，都是跟字典序相关的，但是都不会呜呜呜。\u003c/em\u003e\u003c/p\u003e\n\u003ch1 id=\"440-字典序的第k小数字httpsleetcodecnproblemsk-th-smallest-in-lexicographical-order\"\u003e\u003ca href=\"https://leetcode.cn/problems/k-th-smallest-in-lexicographical-order/\"\u003e440. 字典序的第K小数字\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003e\u003cem\u003ex\u003c/em\u003e\u003c/p\u003e","tags":["Java","LeetCode","算法"],"title":"leetcode打卡 - 2024/8/18","type":"post","url":"/2024/08/18/2024-08-18-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240818/","weight":0,"wordcount":993},{"author":null,"categories":["Java"],"content":"在实际开发的时候经常用到适配器模式！","date":1723939200,"description":"在实际开发的时候经常用到适配器模式！","dir":"post/","excerpt_html":"在实际开发的时候经常用到适配器模式！","excerpt_text":"在实际开发的时候经常用到适配器模式！","expirydate":-62135596800,"fuzzywordcount":1700,"html":"在实际开发的时候经常用到适配器模式！","keywords":null,"kind":"page","lang":"en","lastmod":1723939200,"objectID":"de03e0ef299dcdac7bdb3e336ccec1fa","permalink":"https://wangzhendong20.github.io/2024/08/18/2024-08-18-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/","publishdate":"2024-08-18T00:00:00Z","readingtime":4,"relpermalink":"/2024/08/18/2024-08-18-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/","section":"post","summary":"\u003ch1 id=\"适配器模式adapter-pattern\"\u003e适配器模式（Adapter Pattern）\u003c/h1\u003e\n\u003ch2 id=\"概述\"\u003e概述：\u003c/h2\u003e\n\u003cp\u003e适配器模式是一种结构型设计模式，它允许你将一个类的接口转换成客户端所期待的另一个接口，使得原本由于接口不兼容而不能一起工作的类可以一起工作。\u003c/p\u003e","tags":["设计模式","Java"],"title":"设计模式之适配器模式","type":"post","url":"/2024/08/18/2024-08-18-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":1682},{"author":null,"categories":["LeetCode"],"content":"每日leetcode刷题记录","date":1723852800,"description":"每日leetcode刷题记录","dir":"post/","excerpt_html":"每日leetcode刷题记录","excerpt_text":"每日leetcode刷题记录","expirydate":-62135596800,"fuzzywordcount":1700,"html":"每日leetcode刷题记录","keywords":null,"kind":"page","lang":"en","lastmod":1723852800,"objectID":"77a76143ead46fd88468162a364b02cc","permalink":"https://wangzhendong20.github.io/2024/08/17/2024-08-17-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240817/","publishdate":"2024-08-17T00:00:00Z","readingtime":4,"relpermalink":"/2024/08/17/2024-08-17-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240817/","section":"post","summary":"\u003ch1 id=\"658-找到-k-个最接近的元素httpsleetcodecnproblemsfind-k-closest-elements\"\u003e\u003ca href=\"https://leetcode.cn/problems/find-k-closest-elements/\"\u003e658. 找到 K 个最接近的元素\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003e\u003cem\u003e算术评级：4\u003c/em\u003e  \u003cstrong\u003e中等\u003c/strong\u003e\u003c/p\u003e","tags":["Java","LeetCode","算法"],"title":"leetcode打卡 - 2024/8/17","type":"post","url":"/2024/08/17/2024-08-17-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240817/","weight":0,"wordcount":1614},{"author":null,"categories":["Java"],"content":"今天面试的时候被问到了装饰者模式，在实际开发的时候也是会被经常用到，于是记录一下。","date":1723852800,"description":"今天面试的时候被问到了装饰者模式，在实际开发的时候也是会被经常用到，于是记录一下。","dir":"post/","excerpt_html":"今天面试的时候被问到了装饰者模式，在实际开发的时候也是会被经常用到，于是记录一下。","excerpt_text":"今天面试的时候被问到了装饰者模式，在实际开发的时候也是会被经常用到，于是记录一下。","expirydate":-62135596800,"fuzzywordcount":2100,"html":"今天面试的时候被问到了装饰者模式，在实际开发的时候也是会被经常用到，于是记录一下。","keywords":null,"kind":"page","lang":"en","lastmod":1723852800,"objectID":"15fbb864b560896c8e26d705564af850","permalink":"https://wangzhendong20.github.io/2024/08/17/2024-08-17-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F/","publishdate":"2024-08-17T00:00:00Z","readingtime":4,"relpermalink":"/2024/08/17/2024-08-17-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F/","section":"post","summary":"\u003ch1 id=\"装饰者模式decorator-pattern\"\u003e装饰者模式（Decorator Pattern）\u003c/h1\u003e\n\u003ch2 id=\"概述\"\u003e概述：\u003c/h2\u003e\n\u003cp\u003e装饰者模式是一种结构型设计模式，它允许你通过将对象放入包含行为的特殊封装对象中来为原对象增加新的行为。这些封装对象被称为装饰者。\u003c/p\u003e","tags":["设计模式","Java"],"title":"设计模式之装饰者模式","type":"post","url":"/2024/08/17/2024-08-17-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":2003},{"author":null,"categories":["Java"],"content":"在实际开发的时候经常用到责任链模式！","date":1723852800,"description":"在实际开发的时候经常用到责任链模式！","dir":"post/","excerpt_html":"在实际开发的时候经常用到责任链模式！","excerpt_text":"在实际开发的时候经常用到责任链模式！","expirydate":-62135596800,"fuzzywordcount":1600,"html":"在实际开发的时候经常用到责任链模式！","keywords":null,"kind":"page","lang":"en","lastmod":1723852800,"objectID":"8970ff618bc64c58eeb90d87cb8e589b","permalink":"https://wangzhendong20.github.io/2024/08/17/2024-08-17-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F/","publishdate":"2024-08-17T00:00:00Z","readingtime":4,"relpermalink":"/2024/08/17/2024-08-17-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F/","section":"post","summary":"\u003ch1 id=\"责任链模式chain-of-responsibility-pattern\"\u003e责任链模式（Chain of Responsibility Pattern）\u003c/h1\u003e\n\u003ch2 id=\"概述\"\u003e概述：\u003c/h2\u003e\n\u003cp\u003e责任链模式是一种行为型设计模式，它允许多个对象有机会处理请求，将这些对象连成一条链，直到有对象处理它为止。请求在链上传递，直到链上的某个对象处理该请求。\u003c/p\u003e","tags":["设计模式","Java"],"title":"设计模式之责任链模式","type":"post","url":"/2024/08/17/2024-08-17-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":1594},{"author":null,"categories":["LeetCode"],"content":"每日leetcode刷题记录","date":172368e4,"description":"每日leetcode刷题记录","dir":"post/","excerpt_html":"每日leetcode刷题记录","excerpt_text":"每日leetcode刷题记录","expirydate":-62135596800,"fuzzywordcount":1500,"html":"每日leetcode刷题记录","keywords":null,"kind":"page","lang":"en","lastmod":172368e4,"objectID":"aa0addb803a49e5ad02491885bbad9c5","permalink":"https://wangzhendong20.github.io/2024/08/15/2024-08-15-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240815/","publishdate":"2024-08-15T00:00:00Z","readingtime":3,"relpermalink":"/2024/08/15/2024-08-15-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240815/","section":"post","summary":"\u003ch1 id=\"264-丑数-iihttpsleetcodecnproblemsugly-number-ii\"\u003e\u003ca href=\"https://leetcode.cn/problems/ugly-number-ii/\"\u003e264. 丑数 II\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003e\u003cem\u003e×\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e算数评级：5\u003c/em\u003e   \u003cstrong\u003e中等\u003c/strong\u003e\u003c/p\u003e","tags":["Java","LeetCode","算法"],"title":"leetcode打卡 - 2024/8/15","type":"post","url":"/2024/08/15/2024-08-15-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240815/","weight":0,"wordcount":1452},{"author":null,"categories":["LeetCode"],"content":"每日leetcode刷题记录","date":1723593600,"description":"每日leetcode刷题记录","dir":"post/","excerpt_html":"每日leetcode刷题记录","excerpt_text":"每日leetcode刷题记录","expirydate":-62135596800,"fuzzywordcount":600,"html":"每日leetcode刷题记录","keywords":null,"kind":"page","lang":"en","lastmod":1723593600,"objectID":"8ae15628c97113965f8f678edfc0bbea","permalink":"https://wangzhendong20.github.io/2024/08/14/2024-08-14-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240814/","publishdate":"2024-08-14T00:00:00Z","readingtime":2,"relpermalink":"/2024/08/14/2024-08-14-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240814/","section":"post","summary":"\u003ch1 id=\"373-查找和最小的-k-对数字httpsleetcodecnproblemsfind-k-pairs-with-smallest-sums\"\u003e\u003ca href=\"https://leetcode.cn/problems/find-k-pairs-with-smallest-sums/\"\u003e373. 查找和最小的 K 对数字\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003e\u003cem\u003e×\u003c/em\u003e\u003c/p\u003e","tags":["Java","LeetCode","算法"],"title":"leetcode打卡 - 2024/8/14","type":"post","url":"/2024/08/14/2024-08-14-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240814/","weight":0,"wordcount":517},{"author":null,"categories":["LeetCode"],"content":"记录leetcode每日一题","date":1723161600,"description":"记录leetcode每日一题","dir":"post/","excerpt_html":"记录leetcode每日一题","excerpt_text":"记录leetcode每日一题","expirydate":-62135596800,"fuzzywordcount":400,"html":"记录leetcode每日一题","keywords":null,"kind":"page","lang":"en","lastmod":1723161600,"objectID":"de37afb9a0ec195b099de8806f7af771","permalink":"https://wangzhendong20.github.io/2024/08/09/2024-08-09-leetcodeDaily4/","publishdate":"2024-08-09T00:00:00Z","readingtime":1,"relpermalink":"/2024/08/09/2024-08-09-leetcodeDaily4/","section":"post","summary":"\u003ch1 id=\"每日一题---202489\"\u003e每日一题 - 2024/8/9\u003c/h1\u003e\n\u003ch1 id=\"3132-找出与数组相加的整数-iihttpsleetcodecnproblemsfind-the-integer-added-to-array-ii\"\u003e\u003ca href=\"https://leetcode.cn/problems/find-the-integer-added-to-array-ii/\"\u003e3132. 找出与数组相加的整数 II\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003e\u003cem\u003e原来做周赛的时候做过一次了。\u003c/em\u003e\n\u003cem\u003e代码参考：https://leetcode.cn/problems/find-the-integer-added-to-array-ii/solutions/2759118/onlogn-pai-xu-shuang-zhi-zhen-pythonjava-rdj9/，自己写的代码相比之下太烂了呜呜呜。\u003c/em\u003e\u003c/p\u003e","tags":["Java","LeetCode","算法"],"title":"每日一题 - 2024/8/9","type":"post","url":"/2024/08/09/2024-08-09-leetcodeDaily4/","weight":0,"wordcount":356},{"author":null,"categories":["TECH"],"content":"翻到了去年学习go时候的笔记，记录一下哈哈哈。","date":1722988800,"description":"翻到了去年学习go时候的笔记，记录一下哈哈哈。","dir":"post/","excerpt_html":"翻到了去年学习go时候的笔记，记录一下哈哈哈。","excerpt_text":"翻到了去年学习go时候的笔记，记录一下哈哈哈。","expirydate":-62135596800,"fuzzywordcount":15400,"html":"翻到了去年学习go时候的笔记，记录一下哈哈哈。","keywords":null,"kind":"page","lang":"en","lastmod":1722988800,"objectID":"3ae024d5606c439a0a08171f33af381b","permalink":"https://wangzhendong20.github.io/2024/08/07/2024-8-7-Go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","publishdate":"2024-08-07T00:00:00Z","readingtime":31,"relpermalink":"/2024/08/07/2024-8-7-Go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","section":"post","summary":"\u003ch1 id=\"go学习笔记\"\u003eGo学习笔记\u003c/h1\u003e\n\u003cp\u003e\u003cem\u003e翻到了去年学习go时候的笔记，记录一下哈哈哈。\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e**hello world! **\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003epackage\u003c/span\u003e main\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003eimport\u003c/span\u003e \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#6272a4\"\u003e// import fm \u0026#34;fmt\u0026#34; // 取别名\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#6272a4\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#8be9fd;font-style:italic\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#50fa7b\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   fm.\u003cspan style=\"color:#50fa7b\"\u003ePrintln\u003c/span\u003e(\u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;hello, world\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pr","tags":["Go"],"title":"Go学习笔记","type":"post","url":"/2024/08/07/2024-8-7-Go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","weight":0,"wordcount":15362},{"author":null,"categories":["Other"],"content":"行测 - 资料分析笔记","date":1722816e3,"description":"行测 - 资料分析笔记","dir":"post/","excerpt_html":"行测 - 资料分析笔记","excerpt_text":"行测 - 资料分析笔记","expirydate":-62135596800,"fuzzywordcount":1100,"html":"行测 - 资料分析笔记","keywords":null,"kind":"page","lang":"en","lastmod":1722816e3,"objectID":"c883aa394e2cad3a666b7c53bf27c7ca","permalink":"https://wangzhendong20.github.io/2024/08/05/2024-8-5-%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90%E7%AC%94%E8%AE%B0/","publishdate":"2024-08-05T00:00:00Z","readingtime":3,"relpermalink":"/2024/08/05/2024-8-5-%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90%E7%AC%94%E8%AE%B0/","section":"post","summary":"\u003ch1 id=\"1实用速算技巧\"\u003e1.实用速算技巧\u003c/h1\u003e\n\u003ch2 id=\"11-加法技巧--尾数法高位叠加法削峰填谷法\"\u003e1.1 加法技巧\u0026ndash;尾数法、高位叠加法、削峰填谷法\u003c/h2\u003e\n\u003ch2 id=\"12-减法技巧--整数基准值法2112分段法\"\u003e1.2 减法技巧\u0026ndash;整数基准值法、“21”“12”分段法\u003c/h2\u003e\n\u003ch2 id=\"13-乘法技巧--小分互换法拆分法\"\u003e1.3 乘法技巧\u0026ndash;小分互换法、拆分法\u003c/h2\u003e\n\u003ch3 id=\"131-小分互换\"\u003e1.3.1 小分互换\u003c/h3\u003e\n\u003cp\u003e\n  \u003cimg src=\"/img/%e8%a1%8c%e6%b5%8b/%e8%b5%84%e6%96%99%e5%88%86%e6%9e%90/assests/Snipaste_2024-08-05_22-28-53.png\" alt=\"\"\u003e\n\n\u003c/p\u003e","tags":["other"],"title":"行测 - 资料分析笔记","type":"post","url":"/2024/08/05/2024-8-5-%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90%E7%AC%94%E8%AE%B0/","weight":0,"wordcount":1089},{"author":null,"categories":["Java"],"content":"防止AIGC因异常情况失败，为AIGC任务提供重试机制，提高系统的容错性。本文总结了Spring Retry \u0026 Guava Retry的快速入门及一些原理。","date":1722729600,"description":"防止AIGC因异常情况失败，为AIGC任务提供重试机制，提高系统的容错性。本文总结了Spring Retry \u0026 Guava Retry的快速入门及一些原理。","dir":"post/","excerpt_html":"防止AIGC因异常情况失败，为AIGC任务提供重试机制，提高系统的容错性。本文总结了Spring Retry \u0026 Guava Retry的快速入门及一些原理。","excerpt_text":"防止AIGC因异常情况失败，为AIGC任务提供重试机制，提高系统的容错性。本文总结了Spring Retry \u0026 Guava Retry的快速入门及一些原理。","expirydate":-62135596800,"fuzzywordcount":4100,"html":"防止AIGC因异常情况失败，为AIGC任务提供重试机制，提高系统的容错性。本文总结了Spring Retry \u0026 Guava Retry的快速入门及一些原理。","keywords":null,"kind":"page","lang":"en","lastmod":1722729600,"objectID":"fd6faf42e3bf5f2bc074c49524b8e246","permalink":"https://wangzhendong20.github.io/2024/08/04/2024-8-4-SpringRetry\u0026GuavaRetry/","publishdate":"2024-08-04T00:00:00Z","readingtime":9,"relpermalink":"/2024/08/04/2024-8-4-SpringRetry\u0026GuavaRetry/","section":"post","summary":"\u003ch1 id=\"spring-retry--guava-retry\"\u003eSpring Retry \u0026amp; Guava Retry\u003c/h1\u003e\n\u003ch1 id=\"spring-retry\"\u003eSpring Retry\u003c/h1\u003e\n\u003ch2 id=\"spring-retry简介\"\u003eSpring Retry简介\u003c/h2\u003e\n\u003cp\u003eSpring Retry 为 Spring 应用程序提供了声明性重试支持。它主要是针对可能抛出异常的一些调用操作，进行有策略的重试。\u003c/p\u003e","tags":["Java"],"title":"Spring Retry \u0026 Guava Retry - 快速入门","type":"post","url":"/2024/08/04/2024-8-4-SpringRetry\u0026GuavaRetry/","weight":0,"wordcount":4044},{"author":null,"categories":["LeetCode"],"content":"记录leetcode每日一题","date":1722729600,"description":"记录leetcode每日一题","dir":"post/","excerpt_html":"记录leetcode每日一题","excerpt_text":"记录leetcode每日一题","expirydate":-62135596800,"fuzzywordcount":400,"html":"记录leetcode每日一题","keywords":null,"kind":"page","lang":"en","lastmod":1722729600,"objectID":"ebc81c484216e2e4b4850aa625d9481f","permalink":"https://wangzhendong20.github.io/2024/08/04/2024-08-04-leetcodeDaily3/","publishdate":"2024-08-04T00:00:00Z","readingtime":1,"relpermalink":"/2024/08/04/2024-08-04-leetcodeDaily3/","section":"post","summary":"\u003ch1 id=\"每日一题---202484\"\u003e每日一题 - 2024/8/4\u003c/h1\u003e\n\u003ch1 id=\"572-另一棵树的子树httpsleetcodecnproblemssubtree-of-another-tree\"\u003e\u003ca href=\"https://leetcode.cn/problems/subtree-of-another-tree/\"\u003e572. 另一棵树的子树\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003e\u003cstrong\u003e经典题目\u003c/strong\u003e\u003c/p\u003e","tags":["Java","LeetCode","算法"],"title":"每日一题 - 2024/8/4","type":"post","url":"/2024/08/04/2024-08-04-leetcodeDaily3/","weight":0,"wordcount":366},{"author":null,"categories":["Java"],"content":"今天尝试将SleepingFace BI项目中的功能开发为SDK，这样调用者只需要引入依赖，配置ak/sk，然后调用API就可以使用了。","date":1722643200,"description":"今天尝试将SleepingFace BI项目中的功能开发为SDK，这样调用者只需要引入依赖，配置ak/sk，然后调用API就可以使用了。","dir":"post/","excerpt_html":"今天尝试将SleepingFace BI项目中的功能开发为SDK，这样调用者只需要引入依赖，配置ak/sk，然后调用API就可以使用了。","excerpt_text":"今天尝试将SleepingFace BI项目中的功能开发为SDK，这样调用者只需要引入依赖，配置ak/sk，然后调用API就可以使用了。","expirydate":-62135596800,"fuzzywordcount":1700,"html":"今天尝试将SleepingFace BI项目中的功能开发为SDK，这样调用者只需要引入依赖，配置ak/sk，然后调用API就可以使用了。","keywords":null,"kind":"page","lang":"en","lastmod":1722643200,"objectID":"f69edc32b1206236665f85f4d893b13e","permalink":"https://wangzhendong20.github.io/2024/08/03/2024-8-3-SDK%E5%BC%80%E5%8F%91/","publishdate":"2024-08-03T00:00:00Z","readingtime":4,"relpermalink":"/2024/08/03/2024-8-3-SDK%E5%BC%80%E5%8F%91/","section":"post","summary":"\u003ch1 id=\"sdk开发\"\u003eSDK开发\u003c/h1\u003e\n\u003cp\u003e\u003cstrong\u003e前言\u003c/strong\u003e：今天尝试将\u003cem\u003eSleepingFace BI\u003c/em\u003e项目中的功能开发为SDK，这样调用者只需要引入依赖，配置ak/sk，然后调用API就可以使用了。\u003c/p\u003e","tags":["Java"],"title":"SDK开发 - 快速入门","type":"post","url":"/2024/08/03/2024-8-3-SDK%E5%BC%80%E5%8F%91/","weight":0,"wordcount":1682},{"author":null,"categories":["LeetCode"],"content":"记录leetcode每日一题","date":1722643200,"description":"记录leetcode每日一题","dir":"post/","excerpt_html":"记录leetcode每日一题","excerpt_text":"记录leetcode每日一题","expirydate":-62135596800,"fuzzywordcount":400,"html":"记录leetcode每日一题","keywords":null,"kind":"page","lang":"en","lastmod":1722643200,"objectID":"29a4bde5117eb5a563febe38e7fc86c1","permalink":"https://wangzhendong20.github.io/2024/08/03/2024-08-03-leetcodeDaily2/","publishdate":"2024-08-03T00:00:00Z","readingtime":1,"relpermalink":"/2024/08/03/2024-08-03-leetcodeDaily2/","section":"post","summary":"\u003ch1 id=\"每日一题---202483\"\u003e每日一题 - 2024/8/3\u003c/h1\u003e\n\u003ch1 id=\"3143-正方形中的最多点数httpsleetcodecnproblemssubtree-of-another-tree\"\u003e\u003ca href=\"https://leetcode.cn/problems/subtree-of-another-tree/\"\u003e[3143. 正方形中的最多点数]\u003c/a\u003e\u003c/h1\u003e\n\u003ch2 id=\"方法一\"\u003e方法一\u003c/h2\u003e\n\u003cp\u003e先用TreeMap记录每个范围正方形内的所有字符，\u003c/p\u003e","tags":["Java","LeetCode","算法"],"title":"每日一题 - 2024/8/3","type":"post","url":"/2024/08/03/2024-08-03-leetcodeDaily2/","weight":0,"wordcount":380},{"author":null,"categories":["LeetCode"],"content":"记录leetcode每日一题","date":1722556800,"description":"记录leetcode每日一题","dir":"post/","excerpt_html":"记录leetcode每日一题","excerpt_text":"记录leetcode每日一题","expirydate":-62135596800,"fuzzywordcount":600,"html":"记录leetcode每日一题","keywords":null,"kind":"page","lang":"en","lastmod":1722556800,"objectID":"833f6dfe734224dab8f4a703ee36ffa9","permalink":"https://wangzhendong20.github.io/2024/08/02/2024-08-02-leetcodeDaily1/","publishdate":"2024-08-02T00:00:00Z","readingtime":2,"relpermalink":"/2024/08/02/2024-08-02-leetcodeDaily1/","section":"post","summary":"\u003ch1 id=\"每日一题---202482\"\u003e每日一题 - 2024/8/2\u003c/h1\u003e\n\u003ch1 id=\"3128-直角三角形httpsleetcodecnproblemsright-triangles\"\u003e\u003ca href=\"https://leetcode.cn/problems/right-triangles/\"\u003e3128. 直角三角形\u003c/a\u003e\u003c/h1\u003e\n\u003ch2 id=\"题目介绍\"\u003e题目介绍\u003c/h2\u003e\n\u003cp\u003e给你一个二维 int 矩阵 \u003ccode\u003egrid\u003c/code\u003e 。\u003c/p\u003e","tags":["Java","LeetCode","算法"],"title":"每日一题 - 2024/8/2","type":"post","url":"/2024/08/02/2024-08-02-leetcodeDaily1/","weight":0,"wordcount":516},{"author":null,"categories":["Java"],"content":"记录一下在SleepingFace BI项目里利用AOP实现了权限校验和请求响应日志输出。","date":1722470400,"description":"记录一下在SleepingFace BI项目里利用AOP实现了权限校验和请求响应日志输出。","dir":"post/","excerpt_html":"记录一下在SleepingFace BI项目里利用AOP实现了权限校验和请求响应日志输出。","excerpt_text":"记录一下在SleepingFace BI项目里利用AOP实现了权限校验和请求响应日志输出。","expirydate":-62135596800,"fuzzywordcount":2e3,"html":"记录一下在SleepingFace BI项目里利用AOP实现了权限校验和请求响应日志输出。","keywords":null,"kind":"page","lang":"en","lastmod":1722470400,"objectID":"98bd494d0d3b7ea424cf87baa939dd6c","permalink":"https://wangzhendong20.github.io/2024/08/01/2024-8-1-AOP/","publishdate":"2024-08-01T00:00:00Z","readingtime":4,"relpermalink":"/2024/08/01/2024-8-1-AOP/","section":"post","summary":"\u003ch1 id=\"利用aop实现权限校验和请求响应日志输出\"\u003e利用AOP实现权限校验和请求响应日志输出\u003c/h1\u003e\n\u003cp\u003e\u003cstrong\u003e前言：\u003c/strong\u003e 记录一下在\u003cem\u003eSleepingFace BI\u003c/em\u003e项目里利用AOP做了什么？\u003c/p\u003e","tags":["AOP","Java"],"title":"利用AOP实现权限校验和请求响应日志输出","type":"post","url":"/2024/08/01/2024-8-1-AOP/","weight":0,"wordcount":1996},{"author":null,"categories":["Java"],"content":"利用策略模式+工厂模式实现多种文件类型上传处理，代替if-else判断，提高代码可读性和扩展性。","date":1722384e3,"description":"利用策略模式+工厂模式实现多种文件类型上传处理，代替if-else判断，提高代码可读性和扩展性。","dir":"post/","excerpt_html":"利用策略模式+工厂模式实现多种文件类型上传处理，代替if-else判断，提高代码可读性和扩展性。","excerpt_text":"利用策略模式+工厂模式实现多种文件类型上传处理，代替if-else判断，提高代码可读性和扩展性。","expirydate":-62135596800,"fuzzywordcount":2400,"html":"利用策略模式+工厂模式实现多种文件类型上传处理，代替if-else判断，提高代码可读性和扩展性。","keywords":null,"kind":"page","lang":"en","lastmod":1722384e3,"objectID":"5ef3897c598c75b6ca15bcae0cff6742","permalink":"https://wangzhendong20.github.io/2024/07/31/2024-7-31-%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/","publishdate":"2024-07-31T00:00:00Z","readingtime":5,"relpermalink":"/2024/07/31/2024-7-31-%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/","section":"post","summary":"\u003ch1 id=\"策略模式工厂模式实现多种文件类型上传处理\"\u003e策略模式+工厂模式实现多种文件类型上传处理\u003c/h1\u003e\n\u003cp\u003e\u003cstrong\u003e前言：\u003c/strong\u003e 记录在\u003cem\u003eSleepingFace BI\u003c/em\u003e项目里的一个小优化，采用\u003cem\u003e策略模式+工厂模式\u003c/em\u003e代替了\u003cem\u003eif-else\u003c/em\u003e实现多种文件类型的上传处理。\u003c/p\u003e","tags":["设计模式"],"title":"策略模式+工厂模式实现多种文件类型上传处理","type":"post","url":"/2024/07/31/2024-7-31-%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":2310},{"author":null,"categories":["TECH"],"content":"记录一些常用的Git命令，方便日常使用。","date":1722211200,"description":"记录一些常用的Git命令，方便日常使用。","dir":"post/","excerpt_html":"记录一些常用的Git命令，方便日常使用。","excerpt_text":"记录一些常用的Git命令，方便日常使用。","expirydate":-62135596800,"fuzzywordcount":2200,"html":"记录一些常用的Git命令，方便日常使用。","keywords":null,"kind":"page","lang":"en","lastmod":1722211200,"objectID":"4840357a21ad544e1473885ae7596b3b","permalink":"https://wangzhendong20.github.io/2024/07/29/2024-7-29-Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","publishdate":"2024-07-29T00:00:00Z","readingtime":5,"relpermalink":"/2024/07/29/2024-7-29-Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","section":"post","summary":"\u003ch1 id=\"git常用命令\"\u003eGit常用命令\u003c/h1\u003e\n\u003cp\u003e\u003cstrong\u003e前言：\u003c/strong\u003e 总是使用idea或者VsCode当中的Git直接操作，但是有时候需要用到git命令的时候往往忘记了就需要现查，于是乎就做了一个小总结，方便日常使用。\u003c/p\u003e","tags":["Git"],"title":"Git常用命令","type":"post","url":"/2024/07/29/2024-7-29-Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","weight":0,"wordcount":2150},{"author":null,"categories":["LLM"],"content":"利用LLaMA-Factory微调Qwen2-快速入门","date":1721865600,"description":"利用LLaMA-Factory微调Qwen2-快速入门","dir":"post/","excerpt_html":"利用LLaMA-Factory微调Qwen2-快速入门","excerpt_text":"利用LLaMA-Factory微调Qwen2-快速入门","expirydate":-62135596800,"fuzzywordcount":2200,"html":"利用LLaMA-Factory微调Qwen2-快速入门","keywords":null,"kind":"page","lang":"en","lastmod":1721865600,"objectID":"84a4bbd8fd27d583d06542866a3b22f7","permalink":"https://wangzhendong20.github.io/2024/07/25/2024-7-25-LLM-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/","publishdate":"2024-07-25T00:00:00Z","readingtime":5,"relpermalink":"/2024/07/25/2024-7-25-LLM-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/","section":"post","summary":"\u003ch1 id=\"利用llama-factory微调qwen2-快速入门\"\u003e利用LLaMA-Factory微调Qwen2-快速入门\u003c/h1\u003e\n\u003ch2 id=\"0-qwen2系列模型基础信息\"\u003e0. Qwen2系列模型基础信息\u003c/h2\u003e\n\u003cp\u003e\n  \u003cimg src=\"/img/2024-07-25-LLM-%e5%bf%ab%e9%80%9f%e5%85%a5%e9%97%a8/%e6%a8%a1%e5%9e%8b%e5%9f%ba%e6%9c%ac%e4%bf%a1%e6%81%af.png\" alt=\"模型基本信息\"\u003e\n\n\u003c/p\u003e","tags":["LLM"],"title":"利用LLaMA-Factory微调Qwen2-快速入门","type":"post","url":"/2024/07/25/2024-7-25-LLM-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/","weight":0,"wordcount":2160},{"author":null,"categories":["LeetCode"],"content":"记录一些自己理解的关键点，以及一些常见的错误。","date":1721692800,"description":"记录一些自己理解的关键点，以及一些常见的错误。","dir":"post/","excerpt_html":"记录一些自己理解的关键点，以及一些常见的错误。","excerpt_text":"记录一些自己理解的关键点，以及一些常见的错误。","expirydate":-62135596800,"fuzzywordcount":58100,"html":"记录一些自己理解的关键点，以及一些常见的错误。","keywords":null,"kind":"page","lang":"en","lastmod":1721692800,"objectID":"8c82bcb08ef434c1d1e16b5fa23d24c4","permalink":"https://wangzhendong20.github.io/2024/07/23/leetcode-note/","publishdate":"2024-07-23T00:00:00Z","readingtime":116,"relpermalink":"/2024/07/23/leetcode-note/","section":"post","summary":"\u003ch1 id=\"一些工具类方法\"\u003e一些工具类方法\u003c/h1\u003e\n\u003ch2 id=\"collections\"\u003eCollections\u003c/h2\u003e\n\u003ch3 id=\"排序操作httpsjavaguidecnjavacollectionjava-collection-questions-02html排序操作\"\u003e\u003ca href=\"https://javaguide.cn/java/collection/java-collection-questions-02.html#%E6%8E%92%E5%BA%8F%E6%93%8D%E4%BD%9C\"\u003e排序操作\u003c/a\u003e\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#8be9fd\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#50fa7b\"\u003ereverse\u003c/span\u003e(List list)\u003cspan style=\"color:#6272a4\"\u003e//反转\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#8be9fd\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#50fa7b\"\u003eshuffle\u003c/span\u003e(List list)\u003cspan style=\"color:#6272a4\"\u003e//随机排序\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#8be9fd\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#50fa7b\"\u003esort\u003c/span\u003e(List list)\u003cspan style=\"color:#6272a4\"\u003e//按自然排序的升序排序\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#8be9fd\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#50fa7b\"\u003esort\u003c/span\u003e(List list, Comparator c)\u003cspan style=\"color:#6272a4\"\u003e//定制排序，由Comparator控制排序逻辑\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#8be9fd\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#50fa7b\"\u003eswap\u003c/span\u003e(List list, \u003cspan style=\"color:#8be9fd\"\u003eint\u003c/span\u003e i , \u003cspan style=\"color:#8be9fd\"\u003eint\u003c/span\u003e j)\u003cspan style=\"color:#6272a4\"\u003e//交换两个索引位置的元素\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#8be9fd\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#50fa7b\"\u003erotate\u003c/span\u003e(List list, \u003cspan style=\"color:#8be9fd\"\u003eint\u003c/span\u003e distance)\u003cspan style=\"color:#6272a4\"\u003e//旋转。当distance为正数时，将list后distance个元素整体移到前面。当distance为负数时，将 list的前distance个元素整体移到后面\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pr","tags":["Java","LeetCode","算法"],"title":"代码随想录+leetcode笔记","type":"post","url":"/2024/07/23/leetcode-note/","weight":0,"wordcount":58023},{"author":null,"categories":null,"content":null,"date":1721606400,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1721606400,"objectID":"991698e7b47547ca255f6914485511a5","permalink":"https://wangzhendong20.github.io/2024/07/22/hello-world/","publishdate":"2024-07-22T00:00:00Z","readingtime":1,"relpermalink":"/2024/07/22/hello-world/","section":"post","summary":"\u003cblockquote\u003e\n\u003cp\u003e“Yeah It\u0026rsquo;s on. ”\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"hello-world\"\u003eHello World!\u003c/h2\u003e","tags":null,"title":"Welcome to SleepingFace Blog","type":"post","url":"/2024/07/22/hello-world/","weight":0,"wordcount":10},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"about/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8576ec274c98b3831668a172fa632d80","permalink":"https://wangzhendong20.github.io/about/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/about/","section":"","summary":"\u003ch2 id=\"about-me\"\u003eAbout Me\u003c/h2\u003e\n\u003cp\u003eHi, \u003cstrong\u003e\u003cem\u003eZhendong Wang\u003c/em\u003e\u003c/strong\u003e is a technology enthusiast.\u003c/p\u003e\n\u003ch2 id=\"open-source-projects\"\u003eOpen Source Projects\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: left\"\u003eProject\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003eGitHub\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003eleetcode2024\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003ca href=\"https://github.com/wangzhendong20/leetcode2024\"\u003ehttps://github.com/wangzhendong20/leetcode2024\u003c/a\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003eSleepingFace BI\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003ca href=\"https://github.com/wangzhendong20/SleepingFaceBI-backend\"\u003ehttps://github.com/wangzhendong20/SleepingFaceBI-backend\u003c/a\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003eSleepingFace Chat\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003ca href=\"https://github.com/wangzhendong20/SleepingFace-Chat\"\u003ehttps://github.com/wangzhendong20/SleepingFace-Chat\u003c/a\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003emore projects\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003ca href=\"https://github.com/wangzhendong20\"\u003ehttps://github.com/wangzhendong20\u003c/a\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e","tags":null,"title":"","type":"page","url":"/about/","weight":0,"wordcount":25},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"notes/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"1ede8046f9c3a02d422dea7bbf324e64","permalink":"https://wangzhendong20.github.io/notes/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/notes/","section":"","summary":"","tags":null,"title":"","type":"page","url":"/notes/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"search/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8946788897930c0c0c39fbfcd30ff2e4","permalink":"https://wangzhendong20.github.io/search/placeholder/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/search/placeholder/","section":"search","summary":"","tags":null,"title":"","type":"search","url":"/search/placeholder/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":"Archive of historical posts.","date":-62135596800,"description":"Archive of historical posts.","dir":"archive/","excerpt_html":"Archive of historical posts.","excerpt_text":"Archive of historical posts.","expirydate":-62135596800,"fuzzywordcount":100,"html":"Archive of historical posts.","keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"a06e5ce9eca4c3260843078104889780","permalink":"https://wangzhendong20.github.io/archive/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/archive/","section":"","summary":"","tags":null,"title":"Posts Archive","type":"archive","url":"/archive/","weight":0,"wordcount":0}]