[{"author":null,"categories":["LeetCode"],"content":"每日leetcode刷题记录","date":1723852800,"description":"每日leetcode刷题记录","dir":"post/","excerpt_html":"每日leetcode刷题记录","excerpt_text":"每日leetcode刷题记录","expirydate":-62135596800,"fuzzywordcount":1600,"html":"每日leetcode刷题记录","keywords":null,"kind":"page","lang":"en","lastmod":1723852800,"objectID":"77a76143ead46fd88468162a364b02cc","permalink":"https://wangzhendong20.github.io/2024/08/17/2024-08-17-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240817/","publishdate":"2024-08-17T00:00:00Z","readingtime":4,"relpermalink":"/2024/08/17/2024-08-17-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240817/","section":"post","summary":"658. 找到 K 个最接近的元素 算术评级：4 中等 堆 /** * heap * @param arr * @param k * @param x * @return */ public List\u0026lt;Integer\u0026gt; findClosestElements(int[] arr, int k, int x) { PriorityQueue\u0026lt;int[]\u0026gt; pq = new PriorityQueue\u0026lt;\u0026gt;(k,(a,b) -\u0026gt; b[1]-a[1]); for (int i = 0; i \u0026lt; arr.length; i++) { if (pq.size() \u0026gt;= k) { if (Math.abs(arr[i] - x)","tags":["Java","LeetCode","算法"],"title":"刷题记录 - 2024/8/17","type":"post","url":"/2024/08/17/2024-08-17-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240817/","weight":0,"wordcount":1597},{"author":null,"categories":["LeetCode"],"content":"每日leetcode刷题记录","date":172368e4,"description":"每日leetcode刷题记录","dir":"post/","excerpt_html":"每日leetcode刷题记录","excerpt_text":"每日leetcode刷题记录","expirydate":-62135596800,"fuzzywordcount":1500,"html":"每日leetcode刷题记录","keywords":null,"kind":"page","lang":"en","lastmod":172368e4,"objectID":"aa0addb803a49e5ad02491885bbad9c5","permalink":"https://wangzhendong20.github.io/2024/08/15/2024-08-15-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240815/","publishdate":"2024-08-15T00:00:00Z","readingtime":3,"relpermalink":"/2024/08/15/2024-08-15-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240815/","section":"post","summary":"264. 丑数 II 算数评级：5 中等 堆 /** * 每个丑数都可以用较小的丑数乘以2，3，5得到，因此可以用优先队列来维护 * 小顶堆维护丑数，弹出的第n个数就是第n","tags":["Java","LeetCode","算法"],"title":"刷题记录 - 2024/8/15","type":"post","url":"/2024/08/15/2024-08-15-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240815/","weight":0,"wordcount":1451},{"author":null,"categories":["LeetCode"],"content":"每日leetcode刷题记录","date":1723593600,"description":"每日leetcode刷题记录","dir":"post/","excerpt_html":"每日leetcode刷题记录","excerpt_text":"每日leetcode刷题记录","expirydate":-62135596800,"fuzzywordcount":600,"html":"每日leetcode刷题记录","keywords":null,"kind":"page","lang":"en","lastmod":1723593600,"objectID":"8ae15628c97113965f8f678edfc0bbea","permalink":"https://wangzhendong20.github.io/2024/08/14/2024-08-14-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240814/","publishdate":"2024-08-14T00:00:00Z","readingtime":2,"relpermalink":"/2024/08/14/2024-08-14-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240814/","section":"post","summary":"373. 查找和最小的 K 对数字 /** * 最小的k对数只能是nums1[0]或nums2[0]中选一个，然后再从其它的里面选择小的。 * 所以可以用小根堆来存。","tags":["Java","LeetCode","算法"],"title":"刷题记录 - 2024/8/14","type":"post","url":"/2024/08/14/2024-08-14-%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%9520240814/","weight":0,"wordcount":515},{"author":null,"categories":["LeetCode"],"content":"记录leetcode每日一题","date":1723161600,"description":"记录leetcode每日一题","dir":"post/","excerpt_html":"记录leetcode每日一题","excerpt_text":"记录leetcode每日一题","expirydate":-62135596800,"fuzzywordcount":400,"html":"记录leetcode每日一题","keywords":null,"kind":"page","lang":"en","lastmod":1723161600,"objectID":"de37afb9a0ec195b099de8806f7af771","permalink":"https://wangzhendong20.github.io/2024/08/09/2024-08-09-leetcodeDaily4/","publishdate":"2024-08-09T00:00:00Z","readingtime":1,"relpermalink":"/2024/08/09/2024-08-09-leetcodeDaily4/","section":"post","summary":"每日一题 - 2024/8/9 3132. 找出与数组相加的整数 II 原来做周赛的时候做过一次了。 代码参考：https://leetcode.cn/problems/find","tags":["Java","LeetCode","算法"],"title":"每日一题 - 2024/8/9","type":"post","url":"/2024/08/09/2024-08-09-leetcodeDaily4/","weight":0,"wordcount":356},{"author":null,"categories":["TECH"],"content":"翻到了去年学习go时候的笔记，记录一下哈哈哈。","date":1722988800,"description":"翻到了去年学习go时候的笔记，记录一下哈哈哈。","dir":"post/","excerpt_html":"翻到了去年学习go时候的笔记，记录一下哈哈哈。","excerpt_text":"翻到了去年学习go时候的笔记，记录一下哈哈哈。","expirydate":-62135596800,"fuzzywordcount":15400,"html":"翻到了去年学习go时候的笔记，记录一下哈哈哈。","keywords":null,"kind":"page","lang":"en","lastmod":1722988800,"objectID":"3ae024d5606c439a0a08171f33af381b","permalink":"https://wangzhendong20.github.io/2024/08/07/2024-8-7-Go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","publishdate":"2024-08-07T00:00:00Z","readingtime":31,"relpermalink":"/2024/08/07/2024-8-7-Go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","section":"post","summary":"Go学习笔记 翻到了去年学习go时候的笔记，记录一下哈哈哈。 **hello world! ** package main import \u0026#34;fmt\u0026#34; // import fm \u0026#34;fmt\u0026#34; // 取别名 func main() { fm.Println(\u0026#34;hello, world\u0026#34;) } 基本结构和要素 导入多个包时： import ( \u0026#34;fmt\u0026#34; \u0026#34;os\u0026#34; ) 函","tags":["Go"],"title":"Go学习笔记","type":"post","url":"/2024/08/07/2024-8-7-Go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","weight":0,"wordcount":15362},{"author":null,"categories":["Other"],"content":"行测 - 资料分析笔记","date":1722816e3,"description":"行测 - 资料分析笔记","dir":"post/","excerpt_html":"行测 - 资料分析笔记","excerpt_text":"行测 - 资料分析笔记","expirydate":-62135596800,"fuzzywordcount":1100,"html":"行测 - 资料分析笔记","keywords":null,"kind":"page","lang":"en","lastmod":1722816e3,"objectID":"c883aa394e2cad3a666b7c53bf27c7ca","permalink":"https://wangzhendong20.github.io/2024/08/05/2024-8-5-%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90%E7%AC%94%E8%AE%B0/","publishdate":"2024-08-05T00:00:00Z","readingtime":3,"relpermalink":"/2024/08/05/2024-8-5-%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90%E7%AC%94%E8%AE%B0/","section":"post","summary":"1.实用速算技巧 1.1 加法技巧\u0026ndash;尾数法、高位叠加法、削峰填谷法 1.2 减法技巧\u0026ndash;整数基准值法、“21”“12”分段法 1.3 乘法技巧","tags":["other"],"title":"行测 - 资料分析笔记","type":"post","url":"/2024/08/05/2024-8-5-%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90%E7%AC%94%E8%AE%B0/","weight":0,"wordcount":1089},{"author":null,"categories":["Java"],"content":"防止AIGC因异常情况失败，为AIGC任务提供重试机制，提高系统的容错性。本文总结了Spring Retry \u0026 Guava Retry的快速入门及一些原理。","date":1722729600,"description":"防止AIGC因异常情况失败，为AIGC任务提供重试机制，提高系统的容错性。本文总结了Spring Retry \u0026 Guava Retry的快速入门及一些原理。","dir":"post/","excerpt_html":"防止AIGC因异常情况失败，为AIGC任务提供重试机制，提高系统的容错性。本文总结了Spring Retry \u0026 Guava Retry的快速入门及一些原理。","excerpt_text":"防止AIGC因异常情况失败，为AIGC任务提供重试机制，提高系统的容错性。本文总结了Spring Retry \u0026 Guava Retry的快速入门及一些原理。","expirydate":-62135596800,"fuzzywordcount":4100,"html":"防止AIGC因异常情况失败，为AIGC任务提供重试机制，提高系统的容错性。本文总结了Spring Retry \u0026 Guava Retry的快速入门及一些原理。","keywords":null,"kind":"page","lang":"en","lastmod":1722729600,"objectID":"fd6faf42e3bf5f2bc074c49524b8e246","permalink":"https://wangzhendong20.github.io/2024/08/04/2024-8-4-SpringRetry\u0026GuavaRetry/","publishdate":"2024-08-04T00:00:00Z","readingtime":9,"relpermalink":"/2024/08/04/2024-8-4-SpringRetry\u0026GuavaRetry/","section":"post","summary":"Spring Retry \u0026amp; Guava Retry Spring Retry Spring Retry简介 Spring Retry 为 Spring 应用程序提供了声明性重试支持。它主要是针对可能抛出异常的一些调用操作，进行有策略的重试。 快速入门 这里以","tags":["Java"],"title":"Spring Retry \u0026 Guava Retry - 快速入门","type":"post","url":"/2024/08/04/2024-8-4-SpringRetry\u0026GuavaRetry/","weight":0,"wordcount":4044},{"author":null,"categories":["LeetCode"],"content":"记录leetcode每日一题","date":1722729600,"description":"记录leetcode每日一题","dir":"post/","excerpt_html":"记录leetcode每日一题","excerpt_text":"记录leetcode每日一题","expirydate":-62135596800,"fuzzywordcount":400,"html":"记录leetcode每日一题","keywords":null,"kind":"page","lang":"en","lastmod":1722729600,"objectID":"ebc81c484216e2e4b4850aa625d9481f","permalink":"https://wangzhendong20.github.io/2024/08/04/2024-08-04-leetcodeDaily3/","publishdate":"2024-08-04T00:00:00Z","readingtime":1,"relpermalink":"/2024/08/04/2024-08-04-leetcodeDaily3/","section":"post","summary":"每日一题 - 2024/8/4 572. 另一棵树的子树 经典题目 思路 判断是否是一棵树的子树，那么我们首先想到如何判断两个树是相同的。 判断两个树是否相同有五种情况： 左右子","tags":["Java","LeetCode","算法"],"title":"每日一题 - 2024/8/4","type":"post","url":"/2024/08/04/2024-08-04-leetcodeDaily3/","weight":0,"wordcount":366},{"author":null,"categories":["Java"],"content":"今天尝试将SleepingFace BI项目中的功能开发为SDK，这样调用者只需要引入依赖，配置ak/sk，然后调用API就可以使用了。","date":1722643200,"description":"今天尝试将SleepingFace BI项目中的功能开发为SDK，这样调用者只需要引入依赖，配置ak/sk，然后调用API就可以使用了。","dir":"post/","excerpt_html":"今天尝试将SleepingFace BI项目中的功能开发为SDK，这样调用者只需要引入依赖，配置ak/sk，然后调用API就可以使用了。","excerpt_text":"今天尝试将SleepingFace BI项目中的功能开发为SDK，这样调用者只需要引入依赖，配置ak/sk，然后调用API就可以使用了。","expirydate":-62135596800,"fuzzywordcount":1700,"html":"今天尝试将SleepingFace BI项目中的功能开发为SDK，这样调用者只需要引入依赖，配置ak/sk，然后调用API就可以使用了。","keywords":null,"kind":"page","lang":"en","lastmod":1722643200,"objectID":"f69edc32b1206236665f85f4d893b13e","permalink":"https://wangzhendong20.github.io/2024/08/03/2024-8-3-SDK%E5%BC%80%E5%8F%91/","publishdate":"2024-08-03T00:00:00Z","readingtime":4,"relpermalink":"/2024/08/03/2024-8-3-SDK%E5%BC%80%E5%8F%91/","section":"post","summary":"SDK开发 前言：今天尝试将SleepingFace BI项目中的功能开发为SDK，这样调用者只需要引入依赖，配置ak/sk，然后调用API就可","tags":["Java"],"title":"SDK开发 - 快速入门","type":"post","url":"/2024/08/03/2024-8-3-SDK%E5%BC%80%E5%8F%91/","weight":0,"wordcount":1682},{"author":null,"categories":["LeetCode"],"content":"记录leetcode每日一题","date":1722643200,"description":"记录leetcode每日一题","dir":"post/","excerpt_html":"记录leetcode每日一题","excerpt_text":"记录leetcode每日一题","expirydate":-62135596800,"fuzzywordcount":400,"html":"记录leetcode每日一题","keywords":null,"kind":"page","lang":"en","lastmod":1722643200,"objectID":"29a4bde5117eb5a563febe38e7fc86c1","permalink":"https://wangzhendong20.github.io/2024/08/03/2024-08-03-leetcodeDaily2/","publishdate":"2024-08-03T00:00:00Z","readingtime":1,"relpermalink":"/2024/08/03/2024-08-03-leetcodeDaily2/","section":"post","summary":"每日一题 - 2024/8/3 [3143. 正方形中的最多点数] 方法一 先用TreeMap记录每个范围正方形内的所有字符， 之后遍历TreeMap，如果遇到相同字符就停止统计","tags":["Java","LeetCode","算法"],"title":"每日一题 - 2024/8/3","type":"post","url":"/2024/08/03/2024-08-03-leetcodeDaily2/","weight":0,"wordcount":380},{"author":null,"categories":["LeetCode"],"content":"记录leetcode每日一题","date":1722556800,"description":"记录leetcode每日一题","dir":"post/","excerpt_html":"记录leetcode每日一题","excerpt_text":"记录leetcode每日一题","expirydate":-62135596800,"fuzzywordcount":600,"html":"记录leetcode每日一题","keywords":null,"kind":"page","lang":"en","lastmod":1722556800,"objectID":"833f6dfe734224dab8f4a703ee36ffa9","permalink":"https://wangzhendong20.github.io/2024/08/02/2024-08-02-leetcodeDaily1/","publishdate":"2024-08-02T00:00:00Z","readingtime":2,"relpermalink":"/2024/08/02/2024-08-02-leetcodeDaily1/","section":"post","summary":"每日一题 - 2024/8/2 3128. 直角三角形 题目介绍 给你一个二维 int 矩阵 grid 。 请你返回使用 grid 中的 3 个元素可以构建的 直角三角形 数目，且满足 3 个元素值 都 为 1 。 注意： 如果","tags":["Java","LeetCode","算法"],"title":"每日一题 - 2024/8/2","type":"post","url":"/2024/08/02/2024-08-02-leetcodeDaily1/","weight":0,"wordcount":516},{"author":null,"categories":["Java"],"content":"记录一下在SleepingFace BI项目里利用AOP实现了权限校验和请求响应日志输出。","date":1722470400,"description":"记录一下在SleepingFace BI项目里利用AOP实现了权限校验和请求响应日志输出。","dir":"post/","excerpt_html":"记录一下在SleepingFace BI项目里利用AOP实现了权限校验和请求响应日志输出。","excerpt_text":"记录一下在SleepingFace BI项目里利用AOP实现了权限校验和请求响应日志输出。","expirydate":-62135596800,"fuzzywordcount":2e3,"html":"记录一下在SleepingFace BI项目里利用AOP实现了权限校验和请求响应日志输出。","keywords":null,"kind":"page","lang":"en","lastmod":1722470400,"objectID":"98bd494d0d3b7ea424cf87baa939dd6c","permalink":"https://wangzhendong20.github.io/2024/08/01/2024-8-1-AOP/","publishdate":"2024-08-01T00:00:00Z","readingtime":4,"relpermalink":"/2024/08/01/2024-8-1-AOP/","section":"post","summary":"利用AOP实现权限校验和请求响应日志输出 前言： 记录一下在SleepingFace BI项目里利用AOP做了什么？ 权限校验 请求响应日志输出 1. AO","tags":["AOP","Java"],"title":"利用AOP实现权限校验和请求响应日志输出","type":"post","url":"/2024/08/01/2024-8-1-AOP/","weight":0,"wordcount":1996},{"author":null,"categories":["Java"],"content":"利用策略模式+工厂模式实现多种文件类型上传处理，代替if-else判断，提高代码可读性和扩展性。","date":1722384e3,"description":"利用策略模式+工厂模式实现多种文件类型上传处理，代替if-else判断，提高代码可读性和扩展性。","dir":"post/","excerpt_html":"利用策略模式+工厂模式实现多种文件类型上传处理，代替if-else判断，提高代码可读性和扩展性。","excerpt_text":"利用策略模式+工厂模式实现多种文件类型上传处理，代替if-else判断，提高代码可读性和扩展性。","expirydate":-62135596800,"fuzzywordcount":2400,"html":"利用策略模式+工厂模式实现多种文件类型上传处理，代替if-else判断，提高代码可读性和扩展性。","keywords":null,"kind":"page","lang":"en","lastmod":1722384e3,"objectID":"5ef3897c598c75b6ca15bcae0cff6742","permalink":"https://wangzhendong20.github.io/2024/07/31/2024-7-31-%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/","publishdate":"2024-07-31T00:00:00Z","readingtime":5,"relpermalink":"/2024/07/31/2024-7-31-%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/","section":"post","summary":"策略模式+工厂模式实现多种文件类型上传处理 前言： 记录在SleepingFace BI项目里的一个小优化，采用策略模式+工厂模式代替了if-el","tags":["设计模式"],"title":"策略模式+工厂模式实现多种文件类型上传处理","type":"post","url":"/2024/07/31/2024-7-31-%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":2310},{"author":null,"categories":["TECH"],"content":"记录一些常用的Git命令，方便日常使用。","date":1722211200,"description":"记录一些常用的Git命令，方便日常使用。","dir":"post/","excerpt_html":"记录一些常用的Git命令，方便日常使用。","excerpt_text":"记录一些常用的Git命令，方便日常使用。","expirydate":-62135596800,"fuzzywordcount":2200,"html":"记录一些常用的Git命令，方便日常使用。","keywords":null,"kind":"page","lang":"en","lastmod":1722211200,"objectID":"4840357a21ad544e1473885ae7596b3b","permalink":"https://wangzhendong20.github.io/2024/07/29/2024-7-29-Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","publishdate":"2024-07-29T00:00:00Z","readingtime":5,"relpermalink":"/2024/07/29/2024-7-29-Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","section":"post","summary":"Git常用命令 前言： 总是使用idea或者VsCode当中的Git直接操作，但是有时候需要用到git命令的时候往往忘记了就需要现查，于是乎就做","tags":["Git"],"title":"Git常用命令","type":"post","url":"/2024/07/29/2024-7-29-Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","weight":0,"wordcount":2150},{"author":null,"categories":["LLM"],"content":"利用LLaMA-Factory微调Qwen2-快速入门","date":1721865600,"description":"利用LLaMA-Factory微调Qwen2-快速入门","dir":"post/","excerpt_html":"利用LLaMA-Factory微调Qwen2-快速入门","excerpt_text":"利用LLaMA-Factory微调Qwen2-快速入门","expirydate":-62135596800,"fuzzywordcount":2200,"html":"利用LLaMA-Factory微调Qwen2-快速入门","keywords":null,"kind":"page","lang":"en","lastmod":1721865600,"objectID":"84a4bbd8fd27d583d06542866a3b22f7","permalink":"https://wangzhendong20.github.io/2024/07/25/2024-7-25-LLM-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/","publishdate":"2024-07-25T00:00:00Z","readingtime":5,"relpermalink":"/2024/07/25/2024-7-25-LLM-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/","section":"post","summary":"利用LLaMA-Factory微调Qwen2-快速入门 0. Qwen2系列模型基础信息 我们将采用Qwen2-7B来进行微调 1.配置环境 (1)Au","tags":["LLM"],"title":"利用LLaMA-Factory微调Qwen2-快速入门","type":"post","url":"/2024/07/25/2024-7-25-LLM-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/","weight":0,"wordcount":2160},{"author":null,"categories":["LeetCode"],"content":"记录一些自己理解的关键点，以及一些常见的错误。","date":1721692800,"description":"记录一些自己理解的关键点，以及一些常见的错误。","dir":"post/","excerpt_html":"记录一些自己理解的关键点，以及一些常见的错误。","excerpt_text":"记录一些自己理解的关键点，以及一些常见的错误。","expirydate":-62135596800,"fuzzywordcount":56100,"html":"记录一些自己理解的关键点，以及一些常见的错误。","keywords":null,"kind":"page","lang":"en","lastmod":1721692800,"objectID":"8c82bcb08ef434c1d1e16b5fa23d24c4","permalink":"https://wangzhendong20.github.io/2024/07/23/leetcode-note/","publishdate":"2024-07-23T00:00:00Z","readingtime":112,"relpermalink":"/2024/07/23/leetcode-note/","section":"post","summary":"一些工具类方法 Collections 排序操作 void reverse(List list)//反转 void shuffle(List list)//随机排序 void sort(List list)//按自然排序的升序排序 void sort(List list, Comparator c)//定制排序，由C","tags":["Java","LeetCode","算法"],"title":"代码随想录+leetcode笔记","type":"post","url":"/2024/07/23/leetcode-note/","weight":0,"wordcount":56047},{"author":null,"categories":null,"content":null,"date":1721606400,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1721606400,"objectID":"991698e7b47547ca255f6914485511a5","permalink":"https://wangzhendong20.github.io/2024/07/22/hello-world/","publishdate":"2024-07-22T00:00:00Z","readingtime":1,"relpermalink":"/2024/07/22/hello-world/","section":"post","summary":"“Yeah It\u0026rsquo;s on. ” Hello World!","tags":null,"title":"Welcome to SleepingFace Blog","type":"post","url":"/2024/07/22/hello-world/","weight":0,"wordcount":10},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"about/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8576ec274c98b3831668a172fa632d80","permalink":"https://wangzhendong20.github.io/about/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/about/","section":"","summary":"About Me Hi, Zhendong Wang is a technology enthusiast.\nOpen Source Projects Project GitHub leetcode2024 https://github.com/wangzhendong20/leetcode2024 SleepingFace BI https://github.com/wangzhendong20/SleepingFaceBI-backend SleepingFace Chat https://github.com/wangzhendong20/SleepingFace-Chat more projects https://github.com/wangzhendong20 ","tags":null,"title":"","type":"page","url":"/about/","weight":0,"wordcount":25},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"notes/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"1ede8046f9c3a02d422dea7bbf324e64","permalink":"https://wangzhendong20.github.io/notes/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/notes/","section":"","summary":"","tags":null,"title":"","type":"page","url":"/notes/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"search/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8946788897930c0c0c39fbfcd30ff2e4","permalink":"https://wangzhendong20.github.io/search/placeholder/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/search/placeholder/","section":"search","summary":"","tags":null,"title":"","type":"search","url":"/search/placeholder/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":"Archive of historical posts.","date":-62135596800,"description":"Archive of historical posts.","dir":"archive/","excerpt_html":"Archive of historical posts.","excerpt_text":"Archive of historical posts.","expirydate":-62135596800,"fuzzywordcount":100,"html":"Archive of historical posts.","keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"a06e5ce9eca4c3260843078104889780","permalink":"https://wangzhendong20.github.io/archive/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/archive/","section":"","summary":"","tags":null,"title":"Posts Archive","type":"archive","url":"/archive/","weight":0,"wordcount":0}]